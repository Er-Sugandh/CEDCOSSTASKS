magento 2.4.1 php7.1 mysql8.0 elasticserche 7.7 composer1.10 

Install magento

 sudo apt install nginx -y
sudo systemctl status nginx.service 
sudo apt-get install software-properties-common -y
sudo add-apt-repository ppa:ondrej/php

sudo apt-get update -y
sudo apt install php7.4-fpm php7.4-common php7.4-mysql php7.4-gmp php7.4-curl php7.4-intl php7.4-mbstring php7.4-xmlrpc php7.4-gd php7.4-xml php7.4-cli php7.4-zip php7.4-bcmath php7.4-soap -y

sudo nano /etc/php/7.4/fpm/php.ini
file_uploads = On
allow_url_fopen = On
short_open_tag = On
memory_limit = 256M
cgi.fix_pathinfo = 0
zlib.output_compression = On
upload_max_filesize = 128M
max_execution_time = 600
max_input_time = 900
date.timezone = America/Chicago
 




cd /opt/

sudo wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.7.0-amd64.deb
sudo dpkg -i elasticsearch-7.7.0-amd64.deb
sudo systemctl start elasticsearch
curl -XGET 'http://localhost:9200'
sudo curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=1.10.16 
php composer.phar



mkdir /var/www/magento2
cd /var/www/magento2
 sudo wget https://codeload.github.com/magento/magento2/zip/refs/tags/2.4.1
sudo apt install unzip
sudo unzip 2.4.1
 sudo cp -r /var/www/magento2/magento2-2.4.1/* /var/www/magento2/





sudo apt install mysql-client -y
mysql -u admin -h database-9.cyjfgvn3l5xa.ap-south-1.rds.amazonaws.com -p
(RDS endpint pest on ip) 

cd /var/www/magento2
sudo apt install composer
sudo composer install

sudo bin/magento setup:install --base-url=http://everytech.ml/ --db-host=localhost --db-name=db --db-user=root --db-password=password --admin-firstname=admin --admin-lastname=admin --admin-email=admin@emai.com --admin-user=magentoadmin --admin-password=password@1 --language=en_US --currency=USD --timezone=America/Chicago --use-rewrites=1
#(use localhost with endpoint)

admin_gtczsh

sudo nano /etc/nginx/sites-available/magento2
upstream fastcgi_backend {
server unix:/run/php/php7.4-fpm.sock;
}
server {
server_name mymagento.com;
listen 80;
set $MAGE_ROOT /var/www/magento2;
set $MAGE_MODE developer; # or production
access_log /var/log/nginx/magento2-access.log;
error_log /var/log/nginx/magento2-error.log;
include /var/www/magento2/nginx.conf.sample;
}



 sudo rm -f /etc/nginx/sites-enabled/default

sudo ln -s /etc/nginx/sites-available/magento2 /etc/nginx/sites-enabled/magento2
sudo nginx -t
sudo find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} +
sudo find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} +
sudo chown -R :www-data .
sudo systemctl restart nginx.service
sudo systemctl restart php7.4-fpm



run success fully megento
sudo nano app/etc/env.php
#change default admin name


bin/magento sampledata:deploy
cache_dir "/var/www/magento2/var/page_cache" is not writable
bin/magento sampledata:deploy
./composer.json is not writable.
sudo chmod 777 -R app/etc
bin/magento sampledata:deploy
./composer.json is not writable.
sudo chmod 777 -R pub
bin/magento sampledata:deploy
./composer.json is not writable.


/var/www/magento2$ cd ..
/var/www$ sudo git clone https://github.com/magento/magento2-sample-data.git
/var/www$ cd magento2
sudo php -f /var/www/magento2-sample-data/dev/tools/build-sample-data.php -- --ce-source=/var/www/magento2
bin/magento sampledata:deploy
sudo bin/magento setup:upgrade
sudo systemctl restart nginx.service
success fully run magento
add ssl on magento

sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt
sudo nano /etc/nginx/snippets/self-signed.conf

ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;


 sudo nano /etc/nginx/snippets/ssl-params.conf

# from https://cipherli.st/
# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
ssl_ecdh_curve secp384r1;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;
# Disable preloading HSTS for now.  You can use the commented out header line that includes
# the "preload" directive if you understand the implications.
#add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;

#ssl_dhparam /etc/ssl/certs/dhparam.pem;






sudo nano /etc/nginx/sites-available/magento2

upstream fastcgi_backend {
server unix:/run/php/php7.4-fpm.sock;
}
server {
server_name mymagento.com;
listen 80;
set $MAGE_ROOT /var/www/magento2;
include /var/www/magento2/nginx.conf.sample;
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    include snippets/self-signed.conf;
    include snippets/ssl-params.conf;

    set $MAGE_ROOT /var/www/magento2;
    include /var/www/magento2/nginx.conf.sample;

}


 sudo nginx -t

/var/www/magento2$ sudo bin/magento setup:install --base-url=http://everytech.ml/ --db-host=localhost --db-name=db --db-user=root --db-password=password --admin-firstname=admin --admin-lastname=admin --admin-email=admin@emai.com --admin-user=magentoadmin --admin-password=password@1 --language=en_US --currency=USD --timezone=America/Chicago --use-rewrites=1

sudo systemctl restart nginx



succesfully sssl add on magento

